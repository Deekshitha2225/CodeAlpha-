import java.util.InputMismatchException;
import java.util.Scanner;

public class StudentGradeTracker {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        try {
            System.out.print("Enter the number of students: ");
            int numberOfStudents = sc.nextInt();

            if (numberOfStudents <= 0) {
                System.out.println("Number of students should be greater than zero.");
                return;
            }

            double[] studentsGrades = new double[numberOfStudents];

            for (int i = 0; i < numberOfStudents; i++) {
                boolean validGrade = false;
                double grade = 0;

                while (!validGrade) {
                    System.out.print("Enter the grade of student " + (i + 1)+":" );
                    grade = sc.nextDouble();

                    // Check if the grade is among the allowed values
                    if (isValidGrade(grade)) {
                        validGrade = true;
                    } else {
                        System.out.println("Invalid grade. Please enter one of the allowed grades.");
                    }
                }

                studentsGrades[i] = grade;
            }

            double average = findAverage(studentsGrades);
            double highest = findHighest(studentsGrades);
            double lowest = findLowest(studentsGrades);

            System.out.println("\nThe Results are: ");
            System.out.println("The average grade: " + average);
            System.out.println("The highest grade: " + highest);
            System.out.println("The lowest grade: " + lowest);
        } catch (InputMismatchException e) {
            System.out.println("Invalid input. Please enter a valid number.");
        } finally {
            sc.close();
        }
    }

    private static boolean isValidGrade(double grade) {
        double[] allowedGrades = {10, 9, 8, 7, 6, 5, 4,3,2,1,0};
        for (double allowedGrade : allowedGrades) {
            if (grade == allowedGrade) {
                return true;
            }
        }
        return false;
    }

    private static double findAverage(double[] studentsGrades) {
        double sum = 0;
        for (double grade : studentsGrades) {
            sum += grade;
        }
        return sum / studentsGrades.length;
    }

    private static double findHighest(double[] studentsGrades) {
        double highest = studentsGrades[0];
        for (double grade : studentsGrades) {
            if (grade > highest) {
                highest = grade;
            }
        }
        return highest;
    }

    private static double findLowest(double[] studentsGrades) {
        double lowest = studentsGrades[0];
        for (double grade : studentsGrades) {
            if (grade < lowest) {
                lowest = grade;
            }
        }
        return lowest;
    }
}
